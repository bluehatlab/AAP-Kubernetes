---
- hosts:
    - kube_control_plane
    - kube_node
  become: true
  become_method: sudo
  serial: 1
  any_errors_fatal: "{{ any_errors_fatal | default(true) }}"

  tasks:
  - name: Get the node's details
    command: >-
      kubectl get node
      {{ kube_override_hostname|default(inventory_hostname) }}
      -o json
    register: kubectl_get_node
    delegate_to: "{{ groups['kube_control_plane'][0] }}"
    failed_when: false
    changed_when: false

  - name: Update Node
    when:
      # When status.conditions[x].type == Ready then check stats.conditions[x].status for True|False
      - kubectl_get_node['stdout'] | from_json | json_query("status.conditions[?type == 'Ready'].status")
      # If spec.unschedulable is defined then the node is cordoned
      - not (kubectl_get_node['stdout'] | from_json).spec.unschedulable is defined
    block:
      - name: Cordon & drain node
        include_tasks: drain-node.yml

      - name: Upgrade the Operating System
        include_tasks: apply-update.yml

      - name: Uncordon node
        include_tasks: uncordon.yml
